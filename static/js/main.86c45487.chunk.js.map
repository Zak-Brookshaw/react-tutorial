{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","Form","initialState","state","handleChange","event","target","value","setState","handleSumbit","characters","submitForm","handleSubmit","this","htmlFor","type","id","onChange","Component","App","filter","character","i","fetch","then","result","json","data","className","ReactDOM","render","document","getElementById"],"mappings":"gOAEMA,EAAc,WAChB,OACI,wBAIFC,EAAY,SAACC,GAEf,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACvC,OACI,+BACI,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACI,wBAAQC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAA7C,wBAJCA,MASjB,OAAO,sCAASJ,EAAT,QAgBIS,EAXD,SAACV,GAAW,IACfE,EAAkCF,EAAlCE,cAAeO,EAAmBT,EAAnBS,gBACtB,OACI,kCACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAWP,cAAeA,EAAeO,gBAAiBA,Q,OCsBvDE,E,4MAlDVC,aAAe,CACZN,KAAM,GACNC,IAAK,I,EAGTM,MAAQ,EAAKD,a,EAGbE,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAArBV,EADe,EACfA,KAAMW,EADS,EACTA,MACb,EAAKC,SAAL,eACKZ,EAAOW,K,EAIhBE,aAAe,SAACC,GACZ,EAAKF,SAAS,CAACE,WAAW,GAAD,mBAAO,EAAKP,MAAMO,YAAlB,CAA8BA,O,EAG3DC,WAAa,WACT,EAAKrB,MAAMsB,aAAa,EAAKT,OAC7B,EAAKK,SAAS,EAAKN,e,uDAGb,IAAD,EACiBW,KAAKV,MAAnBP,EADH,EACGA,KAAMC,EADT,EACSA,IAEd,OACI,iCACI,uBAAOiB,QAAQ,OAAf,kBACA,uBACAC,KAAK,OACLnB,KAAK,OACLoB,GAAG,OACHT,MAAOX,EACPqB,SAAUJ,KAAKT,eACf,uBAAOU,QAAQ,MAAf,iBACA,uBACAC,KAAK,OACLnB,KAAK,MACLoB,GAAG,MACHT,MAAOV,EACPoB,SAAUJ,KAAKT,eACf,uBAAOW,KAAK,SAASR,MAAM,SAAST,QAASe,KAAKF,oB,GA5C/CO,aCiDFC,E,4MA3CfhB,MAAQ,CACNO,WAAa,I,EAGbE,aAAe,SAACF,GACd,EAAKF,SAAS,CAACE,WAAW,GAAD,mBAAO,EAAKP,MAAMO,YAAlB,CAA8BA,O,EAGzDX,gBAAkB,SAACJ,GAAW,IACrBe,EAAc,EAAKP,MAAnBO,WACP,EAAKF,SAAS,CACZE,WAAYA,EAAWU,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAM3B,Q,kEAKE,IAAD,OAIlB4B,MAFA,kGAGCC,MAAK,SAACC,GAAD,OAAYA,EAAOC,UACxBF,MAAK,SAACC,GACL,EAAKjB,SAAS,CACZmB,KAAMF,S,+BAKH,IACCf,EAAeG,KAAKV,MAApBO,WAER,OACE,sBAAKkB,UAAU,YAAf,UACI,cAAC,EAAD,CAAOpC,cAAiBkB,EAAYX,gBAAiBc,KAAKd,kBAE1D,cAAC,EAAD,CAAMa,aAAcC,KAAKD,sB,GAtCnBM,aCDlBW,IAASC,OACP,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.86c45487.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\n\r\nconst TableHeader = () =>{\r\n    return (\r\n        <tr/>     \r\n        )\r\n\r\n}\r\nconst TableBody = (props) => {\r\n    \r\n    const rows = props.characterData.map((row, index) => {\r\n        return (\r\n            <tr key={index}>\r\n                <td>{row.name}</td>\r\n                <td>{row.job}</td>\r\n                <td>\r\n                    <button onClick={() => props.removeCharacter(index)}>Delete</button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n    return <tbody> {rows} </tbody>\r\n\r\n}\r\n\r\n\r\nconst Table = (props) => {\r\n    const {characterData, removeCharacter} = props\r\n    return (\r\n        <table>\r\n            <TableHeader />\r\n            <TableBody characterData={characterData} removeCharacter={removeCharacter} />   \r\n        </table>\r\n        )\r\n    }\r\n\r\n\r\nexport default Table","import React, {Component} from 'react'\r\n\r\nclass Form extends Component {\r\n     initialState = {\r\n        name: '',\r\n        job: '',\r\n    }\r\n\r\n    state = this.initialState\r\n   \r\n    \r\n    handleChange = (event) => {\r\n        const {name, value} = event.target\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n    \r\n    handleSumbit = (characters) => {\r\n        this.setState({characters: [... this.state.characters, characters]})\r\n      }\r\n\r\n    submitForm = () => {\r\n        this.props.handleSubmit(this.state)\r\n        this.setState(this.initialState)\r\n    }\r\n\r\n    render() {\r\n        const { name, job } = this.state;\r\n\r\n        return (\r\n            <form>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                value={name}\r\n                onChange={this.handleChange} />\r\n                <label htmlFor=\"job\">Job</label>\r\n                <input\r\n                type=\"text\"\r\n                name=\"job\"\r\n                id=\"job\"\r\n                value={job}\r\n                onChange={this.handleChange} />\r\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\r\n            </form>\r\n            );\r\n    }\r\n}\r\n\r\n\r\nexport default Form;","import React, {Component} from 'react'\r\nimport Table from './Table'\r\nimport Form from './Form'\r\n// This class is fed to index.js\r\n// Here they use React.Dom to send this app (denoted as <App />) to the --root-- in index.html \r\n\r\n\r\nclass App extends Component{\r\n  state = {\r\n    characters : [],\r\n    }\r\n\r\n    handleSubmit = (characters) => {\r\n      this.setState({characters: [... this.state.characters, characters]})\r\n    }\r\n\r\n    removeCharacter = (index) => {\r\n      const {characters} = this.state\r\n      this.setState({\r\n        characters: characters.filter((character, i) =>{\r\n          return i !== index\r\n        }),\r\n      })\r\n    }\r\n\r\n    componentDidMount() {\r\n      const url = \r\n      'https://en.wikipedia.org/w/api.php?action=opensearch&search=Seona+Dancing&format=json&origin=*'\r\n\r\n      fetch(url)\r\n      .then((result) => result.json())\r\n      .then((result) =>{\r\n        this.setState({\r\n          data: result,\r\n        })\r\n      })\r\n    }\r\n\r\n    render(){\r\n      const { characters } = this.state\r\n    // This passes the  const list into the Table class using props\r\n      return(\r\n        <div className=\"container\">\r\n            <Table characterData = {characters} removeCharacter={this.removeCharacter}\r\n            />\r\n            <Form handleSubmit={this.handleSubmit} />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  export default App","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\n\n\nReactDOM.render(\n  <App/>, document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}